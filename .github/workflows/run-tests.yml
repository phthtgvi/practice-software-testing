name: Run Automated Tests

on:
  push:
    branches: [ main ]

concurrency: production_environment

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout ⚙️
        uses: actions/checkout@v4
      - name: Setup environment 🛠️
        run: |
          export DISABLE_LOGGING=true
          # Create .env file from template
          cp sprint5-with-bugs/API/.env_template sprint5-with-bugs/API/.env
          # Update database configuration for Docker
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mariadb/g' sprint5-with-bugs/API/.env
          sed -i 's/DB_DATABASE=${SECRET_DB}_with_bugs/DB_DATABASE=toolshop/g' sprint5-with-bugs/API/.env
          sed -i 's/DB_USERNAME=${SECRET_DB_USER}/DB_USERNAME=user/g' sprint5-with-bugs/API/.env
          sed -i 's/DB_PASSWORD=${SECRET_DB_PASS}/DB_PASSWORD=root/g' sprint5-with-bugs/API/.env
          sed -i 's/APP_ENV=production/APP_ENV=local/g' sprint5-with-bugs/API/.env
          sed -i 's/APP_DEBUG=false/APP_DEBUG=true/g' sprint5-with-bugs/API/.env
          sed -i 's|APP_URL=https://with-bugs.practicesoftwaretesting.com/#/|APP_URL=http://localhost:8091|g' sprint5-with-bugs/API/.env
          echo "DISABLE_LOGGING=true" >> sprint5-with-bugs/API/.env
          echo "DISABLE_LOGGING=true" >> $GITHUB_ENV
      - name: Start containers 🐳
        run: |
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml -f docker-compose.override.yml up -d --force-recreate
      - name: Wait for containers to be ready ⏳
        run: sleep 60
      - name: Install Composer dependencies 📦
        run: |
          docker compose run --rm composer
      - name: Create & Seed database 🌱
        run: |
          docker compose exec -T laravel-api php artisan migrate:refresh --seed
      - name: Test database connection 🔗
        run: |
          docker compose exec -T laravel-api php artisan tinker --execute="echo 'Database connection: ' . (DB::connection()->getPdo() ? 'OK' : 'FAILED');"
      - name: Install Newman
        run: npm install -g newman
      - name: Run API tests with Newman
        run: |
          newman run 22127451-backend-toolshop.postman_collection.json \
            --iteration-data invoice_test_data.csv \
            --reporters cli