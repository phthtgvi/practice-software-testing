{
	"info": {
		"_postman_id": "7a384e4a-fa98-49e1-91f6-6494dd3b4e0c",
		"name": "backend-toolshop-api-testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47874393"
	},
	"item": [
		{
			"name": "/users/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as JSON\r",
							"const response = pm. response . json () ;\r",
							"\r",
							"// Check if the response contains an access token\r",
							"if (response && response.access_token) {\r",
							"    pm. environment .set(\"accessToken\", response.access_token);\r",
							"    console.log(\" Access Token saved to environment variable : \" + response.access_token);\r",
							"} else {\r",
							"    console.log(\"No access token found in the response .\") ;\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/invoices",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{host}}/invoices",
					"host": [
						"{{host}}"
					],
					"path": [
						"invoices"
					]
				}
			},
			"response": []
		},
		{
			"name": "/invoices/invoiceId",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/invoices/{{invoiceId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"invoices",
						"{{invoiceId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/invoices",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Lấy mã trạng thái HTTP mong đợi từ file CSV/dữ liệu lặp\r",
							"const expectedStatusCode = pm.iterationData.get(\"expected_status_code\");\r",
							"\r",
							"// Lấy test case ID để dễ dàng theo dõi log\r",
							"const testCaseId = pm.iterationData.get(\"test_case_id\");\r",
							"console.log(`[${testCaseId}] Running tests...`);\r",
							"\r",
							"pm.test(`[${testCaseId}] Status code is ${expectedStatusCode} as expected`, function() {\r",
							"    pm.response.to.have.status(parseInt(expectedStatusCode));\r",
							"});\r",
							"\r",
							"if (pm.response.code === 201) {\r",
							"    pm.test(`[${testCaseId}] Status code is 201 Created`, function () {\r",
							"        pm.response.to.have.status(201);\r",
							"    });\r",
							"\r",
							"    // Parse a string to JSON\r",
							"    const responseBody = pm.response.json();\r",
							"    const requestBody = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"    pm.test(`[${testCaseId}] Response body should have required properties`, function () {\r",
							"        pm.expect(responseBody).to.have.property(\"id\");\r",
							"        pm.expect(responseBody).to.have.property(\"invoice_number\");\r",
							"        pm.expect(responseBody).to.have.property(\"total\");\r",
							"    });\r",
							"\r",
							"    pm.test(`[${testCaseId}] Data types are correct`, function () {\r",
							"        pm.expect(responseBody.id).to.be.a('number');\r",
							"        pm.expect(responseBody.invoice_number).to.be.a('string').and.to.match(/^INV-/); // Bắt đầu bằng \"INV-\"\r",
							"    });\r",
							"\r",
							"    pm.test(`[${testCaseId}] Response total should match request total`, function () {\r",
							"        pm.expect(responseBody.total).to.equal(requestBody.total);\r",
							"    });\r",
							"\r",
							"    // Lưu 'invoiceId' để dùng cho các request tiếp theo (GET, PUT, DELETE)\r",
							"    if (responseBody.id) {\r",
							"        pm.environment.set(\"invoiceId\", responseBody.id);\r",
							"        console.log(`[${testCaseId}] Saved new invoiceId to environment: ${responseBody.id}`);\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_id\": {{user_id}},\r\n  \"billing_address\": \"{{billing_address}}\",\r\n  \"billing_city\": \"{{billing_city}}\",\r\n  \"billing_country\": \"{{billing_country}}\",\r\n  \"billing_state\": \"{{billing_state}}\",\r\n  \"billing_postcode\": \"{{billing_postcode}}\",\r\n  \"total\": {{total}},\r\n  \"payment_method\": \"{{payment_method}}\",\r\n  \"payment_account_name\": \"{{payment_account_name}}\",\r\n  \"payment_account_number\": \"{{payment_account_number}}\",\r\n  \"invoice_items\": [\r\n    {\r\n      \"product_id\": {{product_id}},\r\n      \"quantity\": {{quantity}},\r\n      \"unit_price\": {{unit_price}}\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/invoices",
					"host": [
						"{{host}}"
					],
					"path": [
						"invoices"
					]
				}
			},
			"response": []
		},
		{
			"name": "/invoices/invoiceId",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{host}}/invoices/{{invoiceId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"invoices",
						"{{invoiceId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/invoices/invoiceId/status",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{host}}/invoices/{{invoiceId}}/status",
					"host": [
						"{{host}}"
					],
					"path": [
						"invoices",
						"{{invoiceId}}",
						"status"
					]
				}
			},
			"response": []
		}
	]
}